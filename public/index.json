[{"content":"Hugo 博客 + GitHub Pages 完整部署方案 📌 环境准备 设备：MacBook（macOS） 工具： Git Hugo GitHub 账号 安装 Hugo brew install hugo 确认安装成功：\nhugo version 🎯 创建 Hugo 博客 mkdir blog \u0026amp;\u0026amp; cd blog hugo new site . 初始化 Git：\ngit init 🎨 选择 \u0026amp; 添加主题 推荐 PaperMod 主题：\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 编辑 config.toml，添加：\ntheme = \u0026#34;PaperMod\u0026#34; baseURL = \u0026#34;https://yzwbeast.github.io/\u0026#34; 📝 编写博客文章 创建第一篇文章：\nhugo new posts/hello-world.md 编辑 content/posts/hello-world.md：\n--- title: \u0026#34;Hello World\u0026#34; date: 2025-02-22T12:00:00 draft: false --- 这是我的第一篇博客！ 🔧 本地预览（第一次部署请跳过） hugo server -D 在浏览器访问：\nhttp://localhost:1313 🔥 发布到 GitHub 1. 创建 GitHub 仓库 blog（存放 Hugo 源码） yzwbeast.github.io（存放生成的静态文件） 2. 推送 blog 仓库 git remote add origin https://github.com/yzwbeast/blog.git git branch -M main git add . git commit -m \u0026#34;Initial commit\u0026#34; git push -u origin main 3. 生成静态文件 hugo -D 静态文件位于 public/ 目录。\n4. 推送到 yzwbeast.github.io cd public git init git remote add origin https://github.com/yzwbeast/yzwbeast.github.io.git git checkout -b main git add . git commit -m \u0026#34;Deploy Hugo site\u0026#34; git push -f origin main 🌎 配置 GitHub Pages 进入 yzwbeast.github.io 仓库 Settings → Pages。 选择 main 分支，保存后等待部署完成。 访问 https://yzwbeast.github.io/ 查看博客。 🔄 自动化部署（可选） 1. 在 blog 仓库添加 deploy.sh nano deploy.sh 粘贴以下内容：\n#!/bin/bash hugo -D cd public git add . git commit -m \u0026#34;Deploy: $(date)\u0026#34; git push origin main cd .. 保存并退出（按 Ctrl + X，然后 Y，再回车）。\n2. 赋予执行权限 chmod +x deploy.sh 3. 运行部署脚本 ./deploy.sh 🎉 大功告成！ 以后更新博客时，只需：\n在 blog/ 目录下写文章 hugo new posts/xxx.md 运行 ./deploy.sh 访问 https://yzwbeast.github.io/ 查看更新 💡 有问题随时复习此笔记！ 🚀\nHugo 博客多语言 \u0026amp; 功能扩展指南 快速链接 baseURL = \u0026#34;https://yzwbeast.github.io/\u0026#34; title = \u0026#34;叶泽伟的博客\u0026#34; theme = \u0026#34;PaperMod\u0026#34; defaultContentLanguage = \u0026#34;zh\u0026#34; hasCJKLanguage = true [languages] [languages.zh] languageName = \u0026#34;中文\u0026#34; weight = 1 contentDir = \u0026#34;content/zh\u0026#34; [languages.zh.params] archivesTitle = \u0026#34;归档\u0026#34; archivesDescription = \u0026#34;按年份和月份查看文章归档\u0026#34; [languages.zh.menu] [[languages.zh.menu.main]] name = \u0026#34;首页\u0026#34; url = \u0026#34;/\u0026#34; weight = 1 [[languages.zh.menu.main]] name = \u0026#34;关于\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 2 [[languages.zh.menu.main]] name = \u0026#34;标签\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 3 [[languages.zh.menu.main]] name = \u0026#34;归档\u0026#34; url = \u0026#34;/archives/\u0026#34; weight = 4 [[languages.zh.menu.main]] name = \u0026#34;搜索\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 5 [languages.en] languageName = \u0026#34;English\u0026#34; weight = 2 contentDir = \u0026#34;content/en\u0026#34; [languages.en.params] archivesTitle = \u0026#34;Archives\u0026#34; archivesDescription = \u0026#34;Browse articles by year and month\u0026#34; [languages.en.menu] [[languages.en.menu.main]] name = \u0026#34;Home\u0026#34; url = \u0026#34;/\u0026#34; weight = 1 [[languages.en.menu.main]] name = \u0026#34;About\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 2 [[languages.en.menu.main]] name = \u0026#34;Tags\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 3 [[languages.en.menu.main]] name = \u0026#34;Archives\u0026#34; url = \u0026#34;/archives/\u0026#34; weight = 4 [[languages.en.menu.main]] name = \u0026#34;Search\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 5 [languages.ja] languageName = \u0026#34;日本語\u0026#34; weight = 3 contentDir = \u0026#34;content/ja\u0026#34; [languages.ja.params] archivesTitle = \u0026#34;アーカイブ\u0026#34; archivesDescription = \u0026#34;年と月ごとに記事を表示\u0026#34; [languages.ja.menu] [[languages.ja.menu.main]] name = \u0026#34;ホーム\u0026#34; url = \u0026#34;/\u0026#34; weight = 1 [[languages.ja.menu.main]] name = \u0026#34;について\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 2 [[languages.ja.menu.main]] name = \u0026#34;タグ\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 3 [[languages.ja.menu.main]] name = \u0026#34;アーカイブ\u0026#34; url = \u0026#34;/archives/\u0026#34; weight = 4 [[languages.ja.menu.main]] name = \u0026#34;検索\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 5 [outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;, \u0026#34;SITEMAP\u0026#34;] section = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;] archives = [\u0026#34;HTML\u0026#34;] search = [\u0026#34;HTML\u0026#34;] [params] author = \u0026#34;叶泽伟\u0026#34; defaultTheme = \u0026#34;auto\u0026#34; ShowAllPagesInArchive = true ShowShareButtons = true ShowReadingTime = true ShowToc = true TocOpen = false ShowBreadCrumbs = true ShowCodeCopyButtons = true ShowPostNavLinks = true ShowRssButtonInSectionTermList = true archives = true [params.fuseOpts] isCaseSensitive = false shouldSort = true location = 0 distance = 1_000 threshold = 0.4 minMatchCharLength = 0 keys = [ \u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34; ] [content] archivesDir = \u0026#34;content/archives\u0026#34; 1. 目录结构 按照我的 hugo.toml 配置，我的 content 目录结构应该是：\ncontent/ ├── zh/ │ ├── _index.md │ ├── about.md │ ├── archives.md │ ├── search.md │ ├── categories/_index.md │ ├── posts/_index.md │ ├── tags/_index.md ├── en/ │ ├── _index.md │ ├── about.md │ ├── archives.md │ ├── search.md │ ├── categories/_index.md │ ├── posts/_index.md │ ├── tags/_index.md ├── ja/ ├── _index.md ├── about.md ├── archives.md ├── search.md ├── categories/_index.md ├── posts/_index.md ├── tags/_index.md 同时，你需要创建 archetypes 目录来适配不同语言：\narchetypes/ ├── default.md ├── zh.md ├── en.md ├── ja.md 2. archetypes 目录配置 每个语言的 archetypes 文件用于设置默认的 front matter。\n默认 archetypes/default.md --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] --- archetypes/zh.md（中文） --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] lang: \u0026#34;zh\u0026#34; --- archetypes/en.md（英文） --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] lang: \u0026#34;en\u0026#34; --- archetypes/ja.md（日语） --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] lang: \u0026#34;ja\u0026#34; --- 3. 创建不同语言的文章 使用 --kind 选项指定 archetypes，并将文章创建到对应的 content/ 目录。\n中文文章 hugo new content/zh/posts/my-first-post1.md 这会在 content/zh/posts/ 目录下创建 my-first-post.md，并使用 archetypes/zh.md 作为模板。\n英文文章 hugo new content/en/posts/my-first-post1.md 这会在 content/en/posts/ 目录下创建 my-first-post.md，并使用 archetypes/en.md 作为模板。\n日语文章 hugo new content/ja/posts/my-first-post1.md 这会在 content/ja/posts/ 目录下创建 my-first-post.md，并使用 archetypes/ja.md 作为模板。\n自动化创建不同语言的文章 create_multilingual_post.sh 脚本\n#!/bin/bash # 检查传入参数是否存在 if [ -z \u0026#34;$1\u0026#34; ]; then echo \u0026#34;请输入文章标题。\u0026#34; exit 1 fi TITLE=\u0026#34;$1\u0026#34; DATE=$(date +%Y-%m-%d) # 创建文章文件名（使用短横线分隔） POST_NAME=$(echo \u0026#34;$TITLE\u0026#34; | tr \u0026#34; \u0026#34; \u0026#34;-\u0026#34;) # 生成中文文章 mkdir -p \u0026#34;content/zh/posts\u0026#34; cat \u0026gt; \u0026#34;content/zh/posts/$POST_NAME.md\u0026#34; \u0026lt;\u0026lt;EOL --- title: \u0026#34;$TITLE\u0026#34; date: $DATE lang: \u0026#34;zh\u0026#34; draft: true tags: [] categories: [] --- 这里是中文版本的内容。 EOL # 生成英文文章 mkdir -p \u0026#34;content/en/posts\u0026#34; cat \u0026gt; \u0026#34;content/en/posts/$POST_NAME.md\u0026#34; \u0026lt;\u0026lt;EOL --- title: \u0026#34;$TITLE\u0026#34; date: $DATE lang: \u0026#34;en\u0026#34; draft: true tags: [] categories: [] --- This is the English version of the post. EOL # 生成日语文章 mkdir -p \u0026#34;content/ja/posts\u0026#34; cat \u0026gt; \u0026#34;content/ja/posts/$POST_NAME.md\u0026#34; \u0026lt;\u0026lt;EOL --- title: \u0026#34;$TITLE\u0026#34; date: $DATE lang: \u0026#34;ja\u0026#34; draft: true tags: [] categories: [] --- この記事は日本語バージョンです。 EOL echo \u0026#34;已成功创建三种语言版本的文章：$TITLE\u0026#34; 在终端中，先切换到脚本所在的目录，并授予执行权限：\nchmod +x create_multilingual_post.sh 执行以下命令，并提供文章标题：\n./create_multilingual_post.sh \u0026#34;你的文章标题\u0026#34; 总结 创建不同语言的文章 需要 hugo new --kind \u0026lt;language\u0026gt; \u0026lt;path\u0026gt;。 archetypes 目录 应该有 zh.md、en.md、ja.md 以匹配 content/ 目录。 保持 contentDir 结构一致，避免 Hugo 生成文章时找不到正确的模板。 这样，你就可以正确管理 Hugo 多语言博客的文章创建了！🚀\n","permalink":"https://yzwbeast.github.io/posts/my-first-post/","summary":"\u003ch1 id=\"hugo-博客--github-pages-完整部署方案\"\u003eHugo 博客 + GitHub Pages 完整部署方案\u003c/h1\u003e\n\u003ch2 id=\"-环境准备\"\u003e📌 环境准备\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e设备\u003c/strong\u003e：MacBook（macOS）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e工具\u003c/strong\u003e：\n\u003cul\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eHugo\u003c/li\u003e\n\u003cli\u003eGitHub 账号\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"安装-hugo\"\u003e\u003cstrong\u003e安装 Hugo\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e确认安装成功：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"-创建-hugo-博客\"\u003e🎯 创建 Hugo 博客\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir blog \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e cd blog\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site .\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e初始化 Git：\u003c/p\u003e","title":"我的博客搭建之旅：从零到上线"},{"content":"你好, 我是叶泽伟 👋 Python \u0026amp; Web 开发者 | 探索云计算 | 技术爱好者\n🚀 热爱编程和开源 📖 通过博客分享知识 🎯 持续学习与成长 📫 联系方式:\nGitHub: github.com/yzwbeast Email: yzw.beast@gmail.com 保持好奇，持续构建！🚀\n","permalink":"https://yzwbeast.github.io/about/","summary":"\u003ch2 id=\"你好-我是叶泽伟-\"\u003e你好, 我是叶泽伟 👋\u003c/h2\u003e\n\u003cp\u003ePython \u0026amp; Web 开发者 | 探索云计算 | 技术爱好者\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e🚀 热爱编程和开源\u003c/li\u003e\n\u003cli\u003e📖 通过博客分享知识\u003c/li\u003e\n\u003cli\u003e🎯 持续学习与成长\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e📫 联系方式:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGitHub: \u003ca href=\"https://github.com/yzwbeast\"\u003egithub.com/yzwbeast\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEmail: \u003ca href=\"mailto:yzw.beast@gmail.com\"\u003eyzw.beast@gmail.com\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e保持好奇，持续构建！🚀\u003c/p\u003e","title":"关于我"}]